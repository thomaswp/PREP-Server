
# Name of the database/system to use
log_database: Logging

# Indicates whether or not to show subgoals when available
show_subgoals: True
show_status: True

help_url: https://docs.google.com/document/d/1PpMrbRDUHrdWL8PgqQsWY6ck7KpdNUUpeCs3FvPzMxs/edit

build:
  # If provided, the models will be loaded from this database, and metadata
  # from this database (e.g. starter code, subgoals) will be used if the
  # models are rebuilt.
  model_database: PriorData
  # If True, the system will periodically rebuild the models using student data.
  rebuild_models: False
  # The minimum number of correct submisssions needed to provide feedback
  min_correct_count_for_feedback: 10
  # The database will be rebuilt each time it has this many more correct submissions
  increment: 5
  # The programming language being used. Supported values are:
  # * python: a special python preprocessor will be used
  # * sql: a SQL preprocessor will be used to normalize capitalization
  # * ~: no preprocessor will be used
  language: ~

conditions:
  # Options:
  # all_intervention: All students receive the intervention
  # all_control: No students receive the intervention
  # random_student: Students are assigned to a random condition when first encountered
  assignment: all_intervention
  # The probability a student is assigned to the intervention condition (0-1)
  # if assignment is set to a random setting
  intervention_probability: 0.5
  # List problems where conditions should be reversed
  inverse_problems: []
  # A map of problems where manual assignment should override the
  # primary assignment strategy. Values include "control" and "intervention".
  # NOTE: If your problem IDs are number, put them in quotes: ProblemID must be a string
  manually_assigned_problems:
    probID1: control
    probID2: intervention
